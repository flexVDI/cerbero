From fed2532bb53dd0b915223d1af4cd17cc02e9edf2 Mon Sep 17 00:00:00 2001
From: Justin Kim <justin.kim@collabora.com>
Date: Thu, 23 Nov 2017 20:43:46 +0900
Subject: [PATCH 4/9] build: support cross-compiling by mingw

This patch is to support building with `mingw-w64` on linux.

Signed-off-by: Justin Kim <justin.kim@collabora.com>
---
 CMakeLists.txt | 26 +++++++++++++++++++++-----
 1 file changed, 21 insertions(+), 5 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 8e02b58..1db73d4 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -89,7 +89,14 @@ set_if(LINUX ${CMAKE_SYSTEM_NAME} MATCHES "Linux")
 
 # find OpenSSL
 if ( USE_GNUTLS )
-	pkg_check_modules (SSL REQUIRED gnutls nettle)
+	set (SSL_REQUIRED_MODULES "gnutls nettle")
+	if (WIN32)
+		if (MINGW)
+			set (SSL_REQUIRED_MODULES "${SSL_REQUIRED_MODULES} zlib")
+		endif()
+	endif()
+ 
+	pkg_check_modules (SSL REQUIRED ${SSL_REQUIRED_MODULES})
 
 	add_definitions(
 		-DUSE_GNUTLS=1
@@ -211,6 +218,7 @@ if (${ENABLE_PROFILE} AND HAVE_COMPILER_GNU_COMPAT)
 endif()
 
 
+if (NOT MINGW)
 # find pthread
 find_path(PTHREAD_INCLUDE_DIR pthread.h HINTS C:/pthread-win32/include)
 if (PTHREAD_INCLUDE_DIR)
@@ -226,6 +234,10 @@ else()
 	message(FATAL_ERROR "Failed to find pthread library. Specify PTHREAD_LIBRARY.")
 endif()
 
+else()
+set (PTHREAD_LIBRARY -lpthreadGC2)
+endif() # if (NOT MINGW)
+
 # This is required in some projects that add some other sources
 # to the SRT library to be compiled together (aka "virtual library").
 if (DEFINED SRT_EXTRA_LIB_INC)
@@ -359,7 +371,8 @@ target_include_directories(${TARGET_haicrypt}
 set_target_properties (${TARGET_haicrypt} PROPERTIES VERSION ${SRT_VERSION} SOVERSION ${SRT_VERSION_MAJOR})
 target_link_libraries(${TARGET_haicrypt} PRIVATE ${SSL_LIBRARIES})
 set (SRT_LIBS_PRIVATE ${SSL_LIBRARIES})
-if (WIN32)
+
+if ( WIN32 AND (NOT MINGW AND NOT CYGWIN) )
 	target_link_libraries(${TARGET_haicrypt} PRIVATE ws2_32.lib)
 	set (SRT_LIBS_PRIVATE ${SRT_LIBS_PRIVATE} ws2_32.lib)
 endif()
@@ -385,10 +398,8 @@ if (ENABLE_SHARED)
 	target_compile_definitions(${TARGET_srt} PUBLIC -DUDT_DYNAMIC) 
 endif()
 
-if ( WIN32 )
-	if (NOT CYGWIN)
+if ( WIN32 AND (NOT MINGW AND NOT CYGWIN) )
     	target_link_libraries(${TARGET_srt} PUBLIC Ws2_32.lib)
-	endif()
 endif()
 
 install(TARGETS ${TARGET_srt}
@@ -452,6 +463,9 @@ endif()
 
 if ( ENABLE_CXX11 )
 
+# FIXME: with MINGW, it fails to build stransmit
+# https://github.com/Haivision/srt/issues/177
+if ( NOT MINGW )
 	add_executable(stransmit
 		${CMAKE_SOURCE_DIR}/apps/stransmit.cpp
 		${CMAKE_SOURCE_DIR}/common/uriparser.cpp
@@ -468,6 +482,8 @@ if ( ENABLE_CXX11 )
 	install(TARGETS stransmit RUNTIME DESTINATION bin)
 	install(PROGRAMS scripts/sfplay DESTINATION bin)
 
+endif() # if ( NOT MINGW )
+
 endif()
 
 if (DEFINED SRT_EXTRA_APPS_INC)
-- 
2.15.1

