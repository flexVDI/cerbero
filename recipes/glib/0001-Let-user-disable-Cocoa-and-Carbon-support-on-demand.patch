From 58179cc8fbdbae4116b02cc1c419a969c92bce76 Mon Sep 17 00:00:00 2001
From: Nirbheek Chauhan <nirbheek@centricular.com>
Date: Thu, 13 Nov 2014 17:22:59 +0530
Subject: [PATCH 01/13] Let user disable Cocoa and Carbon support on demand

Also always AC_SUBST COCOA_LIBS and CARBON_LIBS since these are used in the
pkg-config file, etc.
---
 configure.ac | 71 ++++++++++++++++++++++++++++++++++++++----------------------
 1 file changed, 45 insertions(+), 26 deletions(-)

diff --git a/configure.ac b/configure.ac
index 58cd3f2..e9419f6 100644
--- a/configure.ac
+++ b/configure.ac
@@ -174,32 +174,10 @@ AC_MSG_RESULT([$glib_native_android])
 
 AC_SUBST(LIB_EXE_MACHINE_FLAG)
 
-glib_have_carbon=no
-AC_MSG_CHECKING([for Mac OS X Carbon support])
-AC_TRY_CPP([
-#include <Carbon/Carbon.h>
-#include <CoreServices/CoreServices.h>
-], glib_have_carbon=yes)
-
-AC_MSG_RESULT([$glib_have_carbon])
-
-glib_have_cocoa=no
-AC_MSG_CHECKING([for Mac OS X Cocoa support])
-AC_TRY_CPP([
-#include <Cocoa/Cocoa.h>
-#ifdef GNUSTEP_BASE_VERSION
-#error "Detected GNUstep, not Cocoa"
-#endif
-], glib_have_cocoa=yes)
-
-AC_MSG_RESULT([$glib_have_cocoa])
-
 AM_CONDITIONAL(OS_WIN32, [test "$glib_native_win32" = "yes"])
 AM_CONDITIONAL(OS_WIN32_X64, [test "$LIB_EXE_MACHINE_FLAG" = "X64"])
 AM_CONDITIONAL(OS_UNIX, [test "$glib_native_win32" != "yes"])
 AM_CONDITIONAL(OS_LINUX, [test "$glib_os_linux" = "yes"])
-AM_CONDITIONAL(OS_CARBON, [test "$glib_have_carbon" = "yes"])
-AM_CONDITIONAL(OS_COCOA, [test "$glib_have_cocoa" = "yes"])
 
 AS_IF([test "$glib_native_win32" = "yes"], [
   AC_CHECK_TOOL(WINDRES, windres, no)
@@ -216,15 +194,56 @@ AS_IF([test "$glib_native_win32" = "yes"], [
 ])
 AM_CONDITIONAL(MS_LIB_AVAILABLE, [test x$ms_librarian = xyes])
 
-AS_IF([test "x$glib_have_carbon" = "xyes"], [
+AC_ARG_ENABLE(carbon,
+              [AC_HELP_STRING([--disable-carbon],
+                              [disable Max OS X Carbon support])],,
+              [enable_carbon=yes])
+
+glib_have_carbon=no
+if test "x${enable_carbon}" = "xyes"; then
+  AC_MSG_RESULT([yes])
+  AC_MSG_CHECKING([for Mac OS X Carbon support])
+  AC_TRY_CPP([
+#include <Carbon/Carbon.h>
+#include <CoreServices/CoreServices.h>
+  ], glib_have_carbon=yes)
+  AC_MSG_RESULT([$glib_have_carbon])
+else
+  AC_MSG_RESULT([no])
+fi
+AM_CONDITIONAL(OS_CARBON, [test "$glib_have_carbon" = "yes"])
+
+if test "x$glib_have_carbon" = "xyes"; then
   AC_DEFINE(HAVE_CARBON, 1, [define to 1 if Carbon is available])
   CARBON_LIBS="-Wl,-framework,Carbon"
   LDFLAGS="$LDFLAGS $CARBON_LIBS"
-], [CARBON_LIBS=""])
+fi
 
 AC_SUBST([CARBON_LIBS])
 ac_cv_have_os_x_9_or_later="no"
-AS_IF([test "x$glib_have_cocoa" = "xyes"], [
+dnl Check cocoa
+AC_ARG_ENABLE(cocoa,
+              [AC_HELP_STRING([--disable-cocoa],
+                              [disable Max OS X Cocoa support])],,
+              [enable_cocoa=yes])
+
+glib_have_cocoa=no
+if test "x${enable_cocoa}" = "xyes"; then
+  AC_MSG_RESULT([yes])
+  AC_MSG_CHECKING([for Mac OS X Carbon support])
+  AC_TRY_CPP([
+#include <Cocoa/Cocoa.h>
+#ifdef GNUSTEP_BASE_VERSION
+#error "Detected GNUstep, not Cocoa"
+#endif
+  ], glib_have_cocoa=yes)
+  AC_MSG_RESULT([$glib_have_cocoa])
+else
+  AC_MSG_RESULT([no])
+fi
+AM_CONDITIONAL(OS_COCOA, [test "$glib_have_cocoa" = "yes"])
+
+if test "x$glib_have_cocoa" = "xyes"; then
   AC_DEFINE(HAVE_COCOA, 1, [define to 1 if Cocoa is available])
   COCOA_LIBS="-Wl,-framework,Foundation"
   LDFLAGS="$LDFLAGS $COCOA_LIBS"
@@ -234,7 +253,7 @@ AS_IF([test "x$glib_have_cocoa" = "xyes"], [
 #error Compiling for minimum OS X version before 10.9
 #endif
   ]])],[ac_cv_have_os_x_9_or_later="yes"])
-], [COCOA_LIBS=""])
+fi
 AM_CONDITIONAL([MAC_OS_X_9], [test "x$ac_cv_have_os_x_9_or_later" = xyes])
 AC_SUBST([COCOA_LIBS])
 
-- 
2.7.4

