# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python

import os
import shutil

class Recipe(recipe.Recipe):

    name = 'flexvdi-guest-tools'
    version = '3.1.0'
    licenses = [License.LGPLv2_1]
    remotes = {'origin': 'https://git.flexvdi.com/scm/flexvdi/flexvdi-guest-agent.git'}
    commit = 'origin/master'
    btype = BuildType.CMAKE

    deps = ['flexdp', 'libcups', 'boost' ]

    def install(self):
        shell.call('make DESTDIR=target_tmp install', self.build_dir)
        target_tmp = os.path.join(self.build_dir, "target_tmp")
        target_dir = os.path.join(self.build_dir, "target", "usr", "local")
        os.renames(target_tmp + self.config.prefix, target_dir)

        if self.config.target_platform == Platform.LINUX and self.config.target_arch == Architecture.X86_64:
            build_dir_i686 = os.path.join(self.config.sources, '..', 'linux_x86')
            fgabd64 = self.build_dir
            fgabd32 = os.path.join(build_dir_i686, os.path.basename(self.build_dir))
            if not os.path.exists(fgabd32):
                return
            with open(os.path.join(self.build_dir, 'build_installer.conf'), 'w') as fd:
                fd.write('BUILD_DIR_i686=' + fgabd32 + '/target\n')
                fd.write('BUILD_DIR_x86_64=' + fgabd64 + '/target\n')
            shell.call('make installer', self.build_dir)

    # TODO: build Windows version with toolchain
